<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<appSettings>
		<add key="SplendidProvider" value="Registry" />
	</appSettings>
	<system.web>
		<httpHandlers>
			<add path="Reserved.ReportViewerWebControl.axd" verb="*" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" validate="false"/>
		</httpHandlers>
		<!--
		// 12/29/2005 Paul.  vCalendar support is not going to be easy.
		// Outlook will automatically use FrontPage extensions to place the file. 
		// When connecting to a Apache server, it will make HTTP GET/PUT requests. 
		<httpHandlers>
			<add verb="*" path="*.vdf" type="SplendidCRM.vCalendarHandler, SplendidCRM" />
		</httpHandlers>
		-->
		<!--  DYNAMIC DEBUG COMPILATION
			Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
			false will improve runtime performance of this application. 
			Set compilation debug="true" to insert debugging symbols (.pdb information)
			into the compiled page. Because this creates a larger file that executes
			more slowly, you should set this value to true only when debugging and to
			false at all other times. For more information, refer to the documentation about
			debugging ASP.NET files.
		-->
		<compilation defaultLanguage="c#" debug="true" />

		<!--  CUSTOM ERROR MESSAGES
			Set customErrors mode="On" or "RemoteOnly" to enable custom error messages, "Off" to disable. 
			Add <error> tags for each of the errors you want to handle.

			"On" Always display custom (friendly) messages.
			"Off" Always display detailed ASP.NET error information.
			"RemoteOnly" Display custom (friendly) messages only to users not running 
			on the local Web server. This setting is recommended for security purposes, so 
			that you do not display application detail information to remote clients.
		-->
		<customErrors mode="Off" /> 

		<!--  AUTHENTICATION 
			This section sets the authentication policies of the application. Possible modes are "Windows", 
			"Forms", "Passport" and "None"

			"None" No authentication is performed. 
			"Windows" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
			its settings for the application. Anonymous access must be disabled in IIS. 
			"Forms" You provide a custom form (Web page) for users to enter their credentials, and then 
			you authenticate them in your application. A user credential token is stored in a cookie.
			"Passport" Authentication is performed via a centralized authentication service provided
			by Microsoft that offers a single logon and core profile services for member sites.
		-->
		<authentication mode="Windows" /> 

		<!--  AUTHORIZATION 
			This section sets the authorization policies of the application. You can allow or deny access
			to application resources by user or role. Wildcards: "*" mean everyone, "?" means anonymous 
			(unauthenticated) users.
		-->

		<authorization>
			<allow users="*" /> <!-- Allow all users -->
				<!--  <allow     users="[comma separated list of users]"
								roles="[comma separated list of roles]"/>
					<deny      users="[comma separated list of users]"
								roles="[comma separated list of roles]"/>
				-->
		</authorization>

		<!--  APPLICATION-LEVEL TRACE LOGGING
			Application-level tracing enables trace log output for every page within an application. 
			Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
			trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
			application trace log by browsing the "trace.axd" page from your web application
			root. 
		-->
		<trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true" />

		<!--  SESSION STATE SETTINGS
			By default ASP.NET uses cookies to identify which requests belong to a particular session. 
			If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
			To disable cookies, set sessionState cookieless="true".
			mode="Off"
			mode="InProc"
			mode="StateServer"
			mode="SQLServer"
		-->
		<sessionState mode="StateServer" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;Trusted_Connection=yes" cookieless="false" timeout="60" />

		<!--  GLOBALIZATION
			This section sets the globalization settings of the application. 
		-->
		<globalization requestEncoding="utf-8" responseEncoding="utf-8" />
		<!-- System.Web.HttpException: Maximum request length exceeded.
			Increase to 10M.
		-->
		<httpRuntime maxRequestLength="10000" />
		<!-- 05/08/2006 Paul.  Disable Event Validation as it is causing a problem in the Configure Tabs area. (A .NET 2.0 issue) -->
		<pages enableEventValidation="false" />
	</system.web>
</configuration>
